{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\app-food-order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const cartAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  const [showOrderForm, setShowOrderForm] = React.useState(false);\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setShowOrderForm(true);\n  };\n\n  const submitOrderHandler = userData => {\n    const {\n      isLoading,\n      error,\n      sendRequest: postData\n    } = useHttp;\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cartAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), showOrderForm && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onSubmit: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), !showOrderForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button-alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"z2JT05bQslqoQ9EsfNfiJ7jgtQc=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Muneer/React/app-food-order/src/components/Cart/Cart.js"],"names":["React","useContext","Modal","classes","CartContext","CartItem","Checkout","useHttp","Cart","props","cartCTX","cartAmount","totalAmount","toFixed","hasItems","items","length","showOrderForm","setShowOrderForm","useState","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","isLoading","error","sendRequest","postData","cartItems","map","name","price","bind","onClose","total","actions","button"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCTX = useContext(CartContext);\r\n  const cartAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCTX.items.length > 0;\r\n  const [showOrderForm, setShowOrderForm] = React.useState(false);\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCTX.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCTX.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setShowOrderForm(true);\r\n  };\r\n\r\n  const submitOrderHandler = (userData) => {\r\n    const {isLoading, error, sendRequest: postData} = useHttp;\r\n    \r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCTX.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{cartAmount}</span>\r\n      </div>\r\n      {showOrderForm && (\r\n        <Checkout onCancel={props.onClose} onSubmit={submitOrderHandler} />\r\n      )}\r\n      {!showOrderForm && (\r\n        <div className={classes.actions}>\r\n          <button className={classes[\"button-alt\"]} onClick={props.onClose}>\r\n            Close\r\n          </button>\r\n          {hasItems && (\r\n            <button className={classes.button} onClick={orderHandler}>\r\n              Order\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}