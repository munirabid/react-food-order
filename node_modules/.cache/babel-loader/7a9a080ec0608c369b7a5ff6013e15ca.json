{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\app-food-order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCTX = useContext(CartContext);\n  const cartAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\n  const hasItems = cartCTX.items.length > 0;\n  const [showOrderForm, setShowOrderForm] = React.useState(false);\n  const {\n    isLoading,\n    isSubmited,\n    error,\n    sendRequest: postData\n  } = useHttp();\n\n  const cartItemRemoveHandler = id => {\n    cartCTX.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCTX.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setShowOrderForm(true);\n  };\n\n  const submitOrderHandler = userData => {\n    const processResponse = data => {\n      console.log(data);\n    };\n\n    postData({\n      url: \"https://react-http-9f5a0-default-rtdb.europe-west1.firebasedatabase.app/orders.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        user: userData,\n        orderedItems: cartCTX.items\n      }\n    }, processResponse);\n    cartCTX.clearCart();\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCTX.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n\n  const cartModalcontent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: cartAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), showOrderForm && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onSubmit: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), !showOrderForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button-alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: orderHandler,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  if (isLoading) {\n    cartModalcontent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sending order data....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (isSubmited) {\n    cartModalcontent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order sent successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (error) {\n    cartModalcontent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Order sent successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: cartModalcontent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Cart, \"jq9p0EBMQmUnOO+J+BHKvhtWC/E=\", false, function () {\n  return [useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Muneer/React/app-food-order/src/components/Cart/Cart.js"],"names":["React","useContext","Modal","classes","CartContext","CartItem","Checkout","useHttp","Cart","props","cartCTX","cartAmount","totalAmount","toFixed","hasItems","items","length","showOrderForm","setShowOrderForm","useState","isLoading","isSubmited","error","sendRequest","postData","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","processResponse","data","console","log","url","method","headers","body","user","orderedItems","clearCart","cartItems","map","name","price","bind","cartModalcontent","total","onClose","actions","button"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCTX = useContext(CartContext);\r\n  const cartAmount = `$${cartCTX.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCTX.items.length > 0;\r\n  const [showOrderForm, setShowOrderForm] = React.useState(false);\r\n  const { isLoading, isSubmited, error, sendRequest: postData } = useHttp();\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCTX.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCTX.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setShowOrderForm(true);\r\n  };\r\n\r\n  const submitOrderHandler = (userData) => {\r\n    const processResponse = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n    postData(\r\n      {\r\n        url: \"https://react-http-9f5a0-default-rtdb.europe-west1.firebasedatabase.app/orders.json\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: {\r\n          user: userData,\r\n          orderedItems: cartCTX.items,\r\n        },\r\n      },\r\n      processResponse\r\n    );\r\n\r\n    cartCTX.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCTX.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const cartModalcontent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{cartAmount}</span>\r\n      </div>\r\n      {showOrderForm && (\r\n        <Checkout onCancel={props.onClose} onSubmit={submitOrderHandler} />\r\n      )}\r\n      {!showOrderForm && (\r\n        <div className={classes.actions}>\r\n          <button className={classes[\"button-alt\"]} onClick={props.onClose}>\r\n            Close\r\n          </button>\r\n          {hasItems && (\r\n            <button className={classes.button} onClick={orderHandler}>\r\n              Order\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n\r\n  if (isLoading) {\r\n    cartModalcontent = <p>Sending order data....</p>;\r\n  }\r\n  if (isSubmited) {\r\n    cartModalcontent = <p>Order sent successfully.</p>;\r\n  }\r\n  if(error){\r\n    cartModalcontent = <p>Order sent successfully.</p>;\r\n  }\r\n\r\n  return <Modal onClose={props.onClose}>{cartModalcontent}</Modal>;\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}