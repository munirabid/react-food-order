{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isSubmited, setIsSubmited] = useState(false);\n  const sendRequest = useCallback(async (resquestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(resquestConfig.url, {\n        method: resquestConfig.method ? resquestConfig.method : \"GET\",\n        headers: resquestConfig.headers ? resquestConfig.headers : {},\n        body: resquestConfig.body ? JSON.stringify(resquestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (error) {\n      setError(error.message || \"Something went wrong!!!\");\n    }\n\n    setIsLoading(false);\n    setIsSubmited();\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"5fmHQjnTBPbw/IVCsHqv2oCzSlA=\");\n\nexport default useHttp;","map":{"version":3,"sources":["C:/Muneer/React/app-food-order/src/hooks/use-http.js"],"names":["React","useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","isSubmited","setIsSubmited","sendRequest","resquestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMS,WAAW,GAAGR,WAAW,CAAC,OAAOS,cAAP,EAAuBC,SAAvB,KAAqC;AACnEP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,cAAc,CAACI,GAAhB,EAAqB;AAC/CC,QAAAA,MAAM,EAAEL,cAAc,CAACK,MAAf,GAAwBL,cAAc,CAACK,MAAvC,GAAgD,KADT;AAE/CC,QAAAA,OAAO,EAAEN,cAAc,CAACM,OAAf,GAAyBN,cAAc,CAACM,OAAxC,GAAkD,EAFZ;AAG/CC,QAAAA,IAAI,EAAEP,cAAc,CAACO,IAAf,GAAsBC,IAAI,CAACC,SAAL,CAAeT,cAAc,CAACO,IAA9B,CAAtB,GAA4D;AAHnB,OAArB,CAA5B;;AAMA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEAZ,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAdD,CAcE,OAAOjB,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACmB,OAAN,IAAiB,yBAAlB,CAAR;AACD;;AAEDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,IAAAA,aAAa;AACd,GAvB8B,EAuB5B,EAvB4B,CAA/B;AAyBA,SAAO;AACLL,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CAnCD;;GAAMP,O;;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isSubmited, setIsSubmited] = useState(false);\r\n\r\n  const sendRequest = useCallback(async (resquestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(resquestConfig.url, {\r\n        method: resquestConfig.method ? resquestConfig.method : \"GET\",\r\n        headers: resquestConfig.headers ? resquestConfig.headers : {},\r\n        body: resquestConfig.body ? JSON.stringify(resquestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      applyData(data);\r\n    } catch (error) {\r\n      setError(error.message || \"Something went wrong!!!\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n    setIsSubmited()\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}